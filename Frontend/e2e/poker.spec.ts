import { test, expect } from '@playwright/test';

test.describe('Poker Game', () => {
  test('should start a new game and complete basic actions', async ({ page }) => {
    // Navigate to the home page
    await page.goto('/');
    
    // Check initial state
    await expect(page.getByText('Start Game')).toBeVisible();
    
    // Set initial chips and start game
    await page.getByRole('button', { name: 'Start Game' }).click();
    
    // Wait for game to initialize
    await expect(page.getByText(/Player \d+'s Turn/)).toBeVisible();
    await expect(page.getByText(/Current Bet:/)).toBeVisible();
    
    // Wait for logs to appear and verify blinds
    await expect(page.locator('.logs')).toContainText('posts small blind');
    await expect(page.locator('.logs')).toContainText('posts big blind');
  });

  test('should complete a full hand', async ({ page }) => {
    await page.goto('/');
    
    // Start game with 1000 chips
    await page.getByRole('button', { name: 'Start Game' }).click();
    
    // Pre-flop actions
    await page.getByRole('button', { name: 'Call' }).click();
    await page.getByRole('button', { name: 'Call' }).click();
    await page.getByRole('button', { name: 'Check' }).click();
    
    // Verify flop is dealt
    await expect(page.locator('div.community-cards')).toHaveCount(3);
    
    // Flop actions
    await page.getByRole('button', { name: 'Check' }).click();
    await page.getByRole('button', { name: 'Check' }).click();
    await page.getByRole('button', { name: 'Check' }).click();
    
    // Verify turn is dealt
    await expect(page.locator('div.community-cards')).toHaveCount(4);
    
    // Turn actions
    await page.getByRole('button', { name: 'Check' }).click();
    await page.getByRole('button', { name: 'Check' }).click();
    await page.getByRole('button', { name: 'Check' }).click();
    
    // Verify river is dealt
    await expect(page.locator('div.community-cards')).toHaveCount(5);
    
    // River actions
    await page.getByRole('button', { name: 'Check' }).click();
    await page.getByRole('button', { name: 'Check' }).click();
    await page.getByRole('button', { name: 'Check' }).click();
    
    // Verify game result is shown
    await expect(page.getByText(/Game Results/)).toBeVisible();
  });

  test('should handle raising and folding', async ({ page }) => {
    await page.goto('/');
    await page.getByRole('button', { name: 'Start Game' }).click();
    
    // Wait for game to be ready
    await expect(page.getByText(/Player \d+'s Turn/)).toBeVisible();
    
    // Find the raise controls and make a raise
    const raiseControls = page.locator('div').filter({ hasText: /Raise:/ });
    await raiseControls.getByRole('button', { name: '+' }).click();
    await page.getByRole('button', { name: /Raise:/ }).click();
    
    // Verify the action in logs
    await expect(page.locator('.logs')).toContainText(/raises to/);
    
    // Fold
    await page.getByRole('button', { name: 'Fold' }).click();
    await expect(page.locator('.logs')).toContainText('folds');
  });

  test('play a complete poker hand', async ({ page }) => {
    // The following code will be generated by codegen
    // Just start recording and play through a hand
    await page.goto('http://localhost:3000');
    
    // Start game
    await page.getByRole('button', { name: 'Start Game' }).click();
    
    // The rest will be filled in by the recorder as you play
    // Just play through a hand and the code will be generated automatically
  });

  test('recorded game play', async ({ page }) => {
    await page.goto('http://localhost:3000/');
    await page.getByRole('button', { name: 'Start Game' }).click();
    await page.getByRole('button', { name: 'Call' }).click();
    await page.getByRole('button', { name: 'Fold' }).click();
    await page.getByRole('list').getByRole('button', { name: '+' }).click();
    await page.getByRole('button', { name: 'Raise:' }).click();
    // ... rest of your recorded actions ...
  });
}); 